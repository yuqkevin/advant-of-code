#!/bin/bash
REGEX_DAY='^day[0-9]{1,2}$'
REGEX_YEAR='^20[0-9]{2}$'
if [[ ! $1 =~ $REGEX_YEAR ]] || [ ! $2 ] || [[ ! $2 =~ $REGEX_DAY ]]; then
    echo "Usage: $0 year dayname"
    echo " year is four digit number, e.g 2021"
    echo " dayname is in format 'day[0-9]+', e.g. day9, day20, ..."
    echo ""
    exit 1
fi
if [ -d $1/$2 ]; then
    echo "ERROR: Folder $1/$2 exists"
    echo ""
    exit 1
fi
dayfolder=$1/$2

mkdir -p $dayfolder
if [ ! -f "$1/__init__.py" ]; then
    touch $1/__init__.py
fi
touch $dayfolder/__init__.py

echo "1234567890
2345678901
3456789012" > $dayfolder/input.txt

echo "import sys

from aoc import utils
lines = utils.read_puzzle(__file__)
start_time = utils.time_check()
height = len(lines)
width = len(lines[0])

def part1():
    return \"result of part1\"

def part2():
    return \"result of part2\"

if __name__ == \"__main__\":
    result = None
    if len(sys.argv) < 2 or sys.argv[1] not in [\"part1\", \"part2\"]:
        print(\"\nSorry, I don't get it, \nI need know which part you want to run, part1 or part2?\n\")
        sys.exit()
    if sys.argv[1] == \"part1\":
        result = part1()
    else :
        result = part2()
        
    perf  = utils.time_check(start_time)
    print(result)
    print(f\"{sys.argv[1]} time used: {perf['s']} seconds {perf['ms']} ms {perf['µs']} µs {perf['ns']} ns.\")
" > $dayfolder/solution.py

echo "$dayfolder has been created."
ls -l $dayfolder
echo "You can download your puzzle input to $dayfolder/input.txt and start coding in $dayfolder/solution.py"
echo "To get result, run:"
echo "  python -m $1.$2.solution part1"
echo "  python -m $1.$2.solution part2"
echo ""
